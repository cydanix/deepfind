name: macOS Build & Test (xcodebuild)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: macos-14          # Apple-silicon runner with Xcode 15.4

    # Job-wide environment (no expressions that need the runner context)
    env:
      PACKAGE_SCHEME: DeepFind
      DERIVED_DATA: ${{ github.workspace }}/.derivedData

    defaults:
      run:
        working-directory: .   # where Package.swift lives

    steps:
    # ─────────────────────────── source checkout ──────────────────────────────
    - name: Checkout repository
      uses: actions/checkout@v4

    # ────────────────────────── select exact Xcode ────────────────────────────
    - name: Select Xcode 15.4
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '15.4'

    # ───────────────────── cache the derived-data build folder ────────────────
    - name: Cache Xcode build artefacts
      uses: actions/cache@v4
      with:
        path: ${{ env.DERIVED_DATA }}
        key: ${{ runner.os }}-xcode-build-${{ hashFiles('Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-xcode-build-

    # ─────────────── resolve SwiftPM deps for this Xcode scheme ───────────────
    - name: Resolve SPM dependencies for Xcode
      run: |
        xcodebuild \
          -scheme "$PACKAGE_SCHEME" \
          -destination 'generic/platform=macOS' \
          -derivedDataPath "$DERIVED_DATA" \
          -resolvePackageDependencies

    # ─────────────────────────────── build (Release) ──────────────────────────
    - name: Build (Release, arm64 only)
      run: |
        xcodebuild \
          -scheme "$PACKAGE_SCHEME" \
          -configuration Release \
          -destination 'generic/platform=macOS' \
          -derivedDataPath "$DERIVED_DATA" \
          ARCHS=arm64 \
          ONLY_ACTIVE_ARCH=YES \
          CODE_SIGNING_ALLOWED=NO \
          clean build

    # ───────────────────────── unit tests ──────────────────────
    - name: Test (xcodebuild, arm64 only)
      run: ./get_meilisearch_binary.sh && LOCAL_RUN=1 swift test --parallel --verbose
